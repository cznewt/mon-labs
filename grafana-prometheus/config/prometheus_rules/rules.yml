groups:
  - name: node.rules
    rules:
      - expr: sum(min(kube_pod_info) by (node))
        record: ':kube_pod_info_node_count:'
      - expr: 'max(label_replace(kube_pod_info{instance="kube-state-metrics.kube-system.svc:8080"},
          "pod", "$1", "pod", "(.*)")) by (node, namespace, pod)

          '
        record: 'node_namespace_pod:kube_pod_info:'
      - expr: "count by (node) (sum by (node, cpu) (\n  node_cpu_seconds_total{job=\"\
          node\"}\n))\n"
        record: node:node_num_cpu:sum
      - expr: '1 - avg(rate(node_cpu_seconds_total{job="node",mode="idle"}[1m]))

          '
        record: :node_cpu_utilisation:avg1m
      - expr: "1 - avg by (node) (\n  rate(node_cpu_seconds_total{job=\"node\",mode=\"\
          idle\"}[1m])\n)\n"
        record: node:node_cpu_utilisation:avg1m
      - expr: "node:node_cpu_utilisation:avg1m\n  *\nnode:node_num_cpu:sum\n  /\n\
          scalar(sum(node:node_num_cpu:sum))\n"
        record: node:cluster_cpu_utilisation:ratio
      - expr: 'sum(node_load1{job="node"})

          /

          sum(node:node_num_cpu:sum)

          '
        record: ':node_cpu_saturation_load1:'
      - expr: "sum by (node) (\n  node_load1{job=\"node\"}\n)\n/\nnode:node_num_cpu:sum\n"
        record: 'node:node_cpu_saturation_load1:'
      - expr: '1 -

          sum(node_memory_MemFree_bytes{job="node"} + node_memory_Cached_bytes{job="node"}
          + node_memory_Buffers_bytes{job="node"})

          /

          sum(node_memory_MemTotal_bytes{job="node"})

          '
        record: ':node_memory_utilisation:'
      - expr: 'sum(node_memory_MemFree_bytes{job="node"} + node_memory_Cached_bytes{job="node"}
          + node_memory_Buffers_bytes{job="node"})

          '
        record: :node_memory_MemFreeCachedBuffers_bytes:sum
      - expr: 'sum(node_memory_MemTotal_bytes{job="node"})

          '
        record: :node_memory_MemTotal_bytes:sum
      - expr: "sum by (node) (\n  (node_memory_MemFree_bytes{job=\"node\"} + node_memory_Cached_bytes{job=\"\
          node\"} + node_memory_Buffers_bytes{job=\"node\"})\n)\n"
        record: node:node_memory_bytes_available:sum
      - expr: "sum by (node) (\n  node_memory_MemTotal_bytes{job=\"node\"}\n)\n"
        record: node:node_memory_bytes_total:sum
      - expr: '(node:node_memory_bytes_total:sum - node:node_memory_bytes_available:sum)

          /

          node:node_memory_bytes_total:sum

          '
        record: node:node_memory_utilisation:ratio
      - expr: '(node:node_memory_bytes_total:sum - node:node_memory_bytes_available:sum)

          /

          scalar(sum(node:node_memory_bytes_total:sum))

          '
        record: node:cluster_memory_utilisation:ratio
      - expr: "1e3 * sum(\n  (rate(node_vmstat_pgpgin{job=\"node\"}[1m])\n + rate(node_vmstat_pgpgout{job=\"\
          node\"}[1m]))\n)\n"
        record: :node_memory_swap_io_bytes:sum_rate
      - expr: "1 -\nsum by (node) (\n  (node_memory_MemFree_bytes{job=\"node\"} +\
          \ node_memory_Cached_bytes{job=\"node\"} + node_memory_Buffers_bytes{job=\"\
          node\"})\n)\n/\nsum by (node) (\n  node_memory_MemTotal_bytes{job=\"node\"\
          }\n)\n"
        record: 'node:node_memory_utilisation:'
      - expr: '1 - (node:node_memory_bytes_available:sum / node:node_memory_bytes_total:sum)

          '
        record: 'node:node_memory_utilisation_2:'
      - expr: "1e3 * sum by (node) (\n  (rate(node_vmstat_pgpgin{job=\"node\"}[1m])\n\
          \ + rate(node_vmstat_pgpgout{job=\"node\"}[1m]))\n)\n"
        record: node:node_memory_swap_io_bytes:sum_rate
      - expr: 'avg(irate(node_disk_io_time_seconds_total{job="node",device=~"nvme.+|rbd.+|sd.+|vd.+|xvd.+"}[1m]))

          '
        record: :node_disk_utilisation:avg_irate
      - expr: "avg by (node) (\n  irate(node_disk_io_time_seconds_total{job=\"node\"\
          ,device=~\"nvme.+|rbd.+|sd.+|vd.+|xvd.+\"}[1m])\n)\n"
        record: node:node_disk_utilisation:avg_irate
      - expr: 'avg(irate(node_disk_io_time_weighted_seconds_total{job="node",device=~"nvme.+|rbd.+|sd.+|vd.+|xvd.+"}[1m])
          / 1e3)

          '
        record: :node_disk_saturation:avg_irate
      - expr: "avg by (node) (\n  irate(node_disk_io_time_weighted_seconds_total{job=\"\
          node\",device=~\"nvme.+|rbd.+|sd.+|vd.+|xvd.+\"}[1m]) / 1e3\n)\n"
        record: node:node_disk_saturation:avg_irate
      - expr: 'max by (namespace, pod, device) ((node_filesystem_size_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"}

          - node_filesystem_avail_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"})

          / node_filesystem_size_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"})

          '
        record: 'node:node_filesystem_usage:'
      - expr: 'max by (namespace, pod, device) (node_filesystem_avail_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"}
          / node_filesystem_size_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"})

          '
        record: 'node:node_filesystem_avail:'
      - expr: 'sum(irate(node_network_receive_bytes_total{job="node",device="eth0"}[1m]))
          +

          sum(irate(node_network_transmit_bytes_total{job="node",device="eth0"}[1m]))

          '
        record: :node_net_utilisation:sum_irate
      - expr: "sum by (node) (\n  (irate(node_network_receive_bytes_total{job=\"node\"\
          ,device=\"eth0\"}[1m]) +\n  irate(node_network_transmit_bytes_total{job=\"\
          node\",device=\"eth0\"}[1m]))\n)\n"
        record: node:node_net_utilisation:sum_irate
      - expr: 'sum(irate(node_network_receive_drop_total{job="node",device="eth0"}[1m]))
          +

          sum(irate(node_network_transmit_drop_total{job="node",device="eth0"}[1m]))

          '
        record: :node_net_saturation:sum_irate
      - expr: "sum by (node) (\n  (irate(node_network_receive_drop_total{job=\"node\"\
          ,device=\"eth0\"}[1m]) +\n  irate(node_network_transmit_drop_total{job=\"\
          node\",device=\"eth0\"}[1m]))\n)\n"
        record: node:node_net_saturation:sum_irate
      - expr: "max(\n  max(\n    kube_pod_info{instance=\"kube-state-metrics.kube-system.svc:8080\"\
          , host_ip!=\"\"}\n  ) by (node, host_ip)\n  * on (host_ip) group_right (node)\n\
          \  label_replace(\n    (max(node_filesystem_files{job=\"node\", mountpoint=\"\
          /\"}) by (instance)), \"host_ip\", \"$1\", \"instance\", \"(.*):.*\"\n \
          \ )\n) by (node)\n"
        record: 'node:node_inodes_total:'
      - expr: "max(\n  max(\n    kube_pod_info{instance=\"kube-state-metrics.kube-system.svc:8080\"\
          , host_ip!=\"\"}\n  ) by (node, host_ip)\n  * on (host_ip) group_right (node)\n\
          \  label_replace(\n    (max(node_filesystem_files_free{job=\"node\", mountpoint=\"\
          /\"}) by (instance)), \"host_ip\", \"$1\", \"instance\", \"(.*):.*\"\n \
          \ )\n) by (node)\n"
        record: 'node:node_inodes_free:'
